# -using System;

public class Node
{
    public int data;
    public Node next;

    public Node(int value)
    {
        data = value;
        next = null;
    }
}

public class Stack
{
    private Node top; // 스택의 가장 위에 있는 노드를 가리킴

    public Stack()
    {
        top = null;
    }

    public void Push(int value)
    {
        Node newNode = new Node(value);
        newNode.next = top;
        top = newNode;
    }

    public int Pop()
    {
        if (top == null)
        {
            Console.WriteLine("Stack underflow error");
            return -1;
        }
        int value = top.data;
        top = top.next;
        return value;
    }

    public int Peek()
    {
        if (top == null)
        {
            Console.WriteLine("Stack is empty");
            return -1;
        }
        return top.data;
    }

    public bool IsEmpty()
    {
        return top == null;
    }

    public void PrintStack()
    {
        if (top == null)
        {
            Console.WriteLine("Stack is empty");
            return;
        }
        Console.WriteLine("Stack contents:");
        Node current = top;
        while (current != null)
        {
            Console.WriteLine(current.data);
            current = current.next;
        }
    }
}

public class Program
{
    public static void Main()
    {
        Stack stack = new Stack();

        stack.Push(10);
        stack.Push(20);
        stack.Push(30);

        Console.WriteLine(stack.Pop()); // 30
        Console.WriteLine(stack.Pop()); // 20

        stack.Push(40);

        Console.WriteLine(stack.Peek()); // 40

        stack.PrintStack(); 
        /*
        Stack contents:
        40
        10
        */

        Console.WriteLine(stack.IsEmpty()); // False
    }
}



